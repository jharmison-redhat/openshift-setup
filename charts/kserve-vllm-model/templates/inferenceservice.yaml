apiVersion: serving.kserve.io/v1beta1
kind: InferenceService
metadata:
  annotations:
    openshift.io/display-name: {{ include "kserve-vllm-model.displayname" . }}
    {{- if .Values.exposedWithToken }}
    security.opendatahub.io/enable-auth: "true"
    {{- end }}
    {{- $deploymentModes := list "RawDeployment" "Serverless" }}
    {{- if not (mustHas .Values.deploymentMode $deploymentModes) }}
      {{- fail (printf "Model deployment mode must be one of: %s" $deploymentModes) }}
    {{- end }}
    {{- if eq .Values.deploymentMode "Serverless" }}
    serving.kserve.io/deploymentMode: Serverless
    serving.knative.openshift.io/enablePassthrough: "true"
    sidecar.istio.io/inject: "true"
    sidecar.istio.io/rewriteAppHTTPProbers: "true"
    {{- else }}
    serving.kserve.io/deploymentMode: RawDeployment
    {{- end }}
  labels:
    opendatahub.io/dashboard: "true"
    {{- if and (not .Values.exposedWithToken) (eq .Values.deploymentMode "Serverless") }}
    networking.knative.dev/visibility: cluster-local
    {{- else if and .Values.exposedWithToken (eq .Values.deploymentMode "RawDeployment") }}
    networking.kserve.io/visibility: exposed
    {{- end }}
    {{- include "kserve-vllm-model.labels" . | nindent 4 }}
  name: {{ include "kserve-vllm-model.fullname" . }}
spec:
  predictor:
    {{- with .Values.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 6 }}
    {{- end }}
    {{- with include "kserve-vllm-model.isvc.predictor.annotations" . }}
    annotations:
      {{- . | indent 6 }}
    {{- end }}
    maxReplicas: {{ .Values.scaling.maxReplicas }}
    minReplicas: {{ .Values.scaling.minReplicas }}
    model:
      {{- with .Values.model.extraArgs }}
      args:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.model.extraEnv }}
      env:
        {{- toYaml . | nindent 8}}
      {{- end }}
      modelFormat:
        name: vLLM
      name: ""
      resources:
        {{- toYaml .Values.resources | nindent 8 }}
      runtime: {{ include "kserve-vllm-model.fullname" . }}
      {{- $storageTypes := list "uri" "storageConfig" }}
      {{- if not (mustHas .Values.model.type $storageTypes) }}
        {{- fail (printf "Model storage type must be one of: %s" $storageTypes) }}
      {{- end }}
      {{- if eq .Values.model.type "uri" }}
      storageUri: {{ .Values.model.uri }}
      {{- else if eq .Values.model.type "storageConfig" }}
      storage:
        key: {{ include "kserve-vllm-model.fullname" . }}
        path: {{ .Values.model.storageConfig.path }}
      {{- end }}
    {{- with .Values.tolerations }}
    tolerations:
      {{- toYaml . | nindent 6 }}
    {{- end }}
